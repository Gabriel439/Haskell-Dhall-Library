name: main
on: [push]
#on:
#  push:
#    tags:
#      - '[0-9]+.[0-9]+.[0-9]+'
#      - '[0-9]+.[0-9]+.[0-9]+[0-9]+'
jobs:
  deploy:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    name: Deploy ${{ matrix.os }} executable
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - id: setup-haskell-cabal
        uses: haskell/actions/setup@v1.2.1
        with:
          enable-stack: true
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.stack-root }}
            .stack-work
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
          restore-keys: |
            ${{ runner.os }}-
      - run: stack build
      - run: stack build --copy-bins --local-bin-path ./bin
      - run: mkdir -p uploads share/man/man1
      - if: ${{ matrix.os == 'macOS-latest' }}
        run: |
          get_cabal_version() {
            grep '^Version: ' < "$1/$1.cabal" | sed -e 's/^Version:  *//g';
          }
          mk_release_name() {
            printf "$1-$(get_cabal_version "$1")-$(uname -m)-macos.tar.bz2";
          }
          # Package dhall
          cp dhall/man/dhall.1 share/man/man1/
          tar -jcvf "uploads/$(mk_release_name dhall)" bin/dhall share/man/man1/dhall.1
          # Package dhall-bash
          tar -jcvf "uploads/$(mk_release_name dhall-bash)" bin/dhall-to-bash
          # Package dhall-docs
          cp dhall-docs/src/Dhall/data/man/dhall-docs.1 share/man/man1/
          tar -jcvf "uploads/$(mk_release_name dhall-docs)" bin/dhall-docs share/man/man1/dhall-docs.1
          # Package dhall-json
          tar -jcvf "uploads/$(mk_release_name dhall-json)" bin/dhall-to-json bin/dhall-to-yaml bin/json-to-dhall
          # Package dhall-lsp-server
          tar -jcvf "uploads/$(mk_release_name dhall-lsp-server)" bin/dhall-lsp-server
          # Package dhall-nix
          tar -jcvf "uploads/$(mk_release_name dhall-nix)" bin/dhall-to-nix
          # Package dhall-openapi
          tar -jcvf "uploads/$(mk_release_name dhall-openapi)" bin/openapi-to-dhall
          # Package dhall-yaml
          tar -jcvf "uploads/$(mk_release_name dhall-yaml)" bin/dhall-to-yaml-ng bin/yaml-to-dhall
      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: uploads/*.tar.bz2
